{
    "name": {
        "ru": "Александр Медведев",
        "en": "Alexander Medvedev"
    },
    "photos": [
        "/cv-frontend/images/avatars/photo.jpg",
        "/cv-frontend/images/avatars/photo1.jpg"
    ],
    "summary" : {
        "ru": "Специализируюсь на создании SPA/SSR/PWA с нуля и их поддержке. Увлекаюсь разработкой telegram-ботов и сервисов. Имею бэкграунд работы в международной IT-корпорации SAP (4 года) на позиции Location Responsible (системный администратор / IT-Support 2 line / тестировщик). TypeScript. Могу в бэк (Node.js, Nest.js, Express, MongoDB, PostgreSQL, MySQL, Firebase), но ближе по душе фронт (React, Vue).",
        "en": "Before professional development worked at the international IT corporation SAP (4 years) in the position of Location Responsible (system administrator / IT support 2nd line / coordinator). In the field of programming, I tried my hand at Backend development (Node.js, Nest.js, Express, MongoDB, PostgreSQL, MySQL, Firebase), but realized that Frontend (React, Vue) was more to my liking. Specializes both in creating SPA/SSR/PWA from scratch and supporting them, as well as in developing telegram bots and services."
    },
    "contacts": [
        {
            "title": "tel",
            "value": "+79826985468"
        },
        {
            "title": "mailto",
            "value": "mspolermo@gmail.com"     
        },
        {
            "title": "telegram",
            "value": "https://t.me/mspolermo"
        },
        {
            "title": "whatsup",
            "value": "https://wa.me/79826985468"
        },
        {
            "title": "vkontakte",
            "value": "https://vk.com/ms_polermo"
        },
        {
            "title": "linkedin",
            "value": "https://linkedin.com/in/medvedev-alex"
        },
        {
            "title": "headHunter",
            "value": "https://ekaterinburg.hh.ru/resume/f92de35bff0ba86eb70039ed1f51396a4f6e45"
        },
        {
            "title": "gitHub",
            "value": "https://github.com/mspolermo/"
        }
    ],
    "skills": {
        "hard" : [
            "TypeScript",
            {
                "title": "React", 
                "value" : [
                    "Redux",
                    "MobX",
                    "Storybook",
                    "Cypress",
                    "Axios",
                    "I18n",
                    "Jest",
                    "JWT",
                    "React testing library",
                    "React-router",
                    "React-bootstrap"
                ]
            },
            {
                "title": "Vue", 
                "value" : [
                    "Vuex",
                    "Pinia",
                    "Vitest",
                    "Vuetify"
                ]
            },
            {
                "title": "Nest", 
                "value" : [
                    "Swagger",
                    "Sequelize",
                    "PostgreSQL",
                    "MongoDB"
                ]
            },
            "Next",
            "PostgreSQL",
            "MongoDB",
            "Node.JS",
            "Rest_API",
            "SCSS",
            "Git",
            "WebPack",
            "Vite",
            "JavaScript",
            "Swiper",
            "Tailwind",
            "jQuery",
            "OOP",
            "Firebase",
            "MaterialUI"
        ],
        "soft": [
            "Team work",
            "Problem-solving",
            "Time management",
            "Emotional control"
        ] 
    },
    "projects" : {
        "ru": [
            {
                "name": "ORGSTRUCTURE",
                "summary" : "Визуализация оргструктуры предприятия",
                "repo": "https://github.com/mspolermo/org-structure",
                "ghPage": null,
                "important": true,
                "skills": [
                    "Nest",
                    "PostgreSQL",
                    "React",
                    "Node.JS",
                    "MobX",
                    "Swagger",
                    "Sequelize",
                    "JWT",
                    "TypeScript"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "OrgStructure — это комплексная платформа для упрощения управления справочной информации, администрирования и визуализации организационной структуры предприятия."
                    },
                    {
                        "title": "Проект состоит из трех ключевых компонентов::",
                        "info": [
                            "Клиентская часть (Front-End) — пользовательский интерфейс, обеспечивающий взаимодействие с системой.",
                            "Серверная часть (Back-End) — серверное приложение, отвечающее за бизнес-логику и обработку данных.",
                            "Расширение (Extension) — браузерное расширение, дополняющее функционал платформы."
                        ]
                    },
                    {
                        "title": "Клиентская часть:",
                        "info": [
                            "Визуализация организационных структур.",
                            "Удобный интерфейс для создания, редактирования и просмотра данных о сотрудниках, пользователях и отделов предприятия.",
                            "Архитектурный подход Feature Sliced Design",
                            "Storybook для UI-KIT"
                        ]
                    },
                    {
                        "title": "Серверная часть:",
                        "info": [
                            "API для обработки данных организационных структур.",
                            "Авторизация и аутентификация на JWT-токенах.",
                            "Работа с базой данных Sequelize/PostgreSQL.",
                            "Документация эндпойнтов на Swagger"
                        ]
                    },
                    {
                        "title": "Браузерное расширение",
                        "info": [
                            "Быстрый доступ к основным функциям платформы через браузер.",
                            "Интеграция с клиентской частью."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Orgstructure/1.png",
                    "/cv-frontend/images/projects/Orgstructure/2.png",
                    "/cv-frontend/images/projects/Orgstructure/3.png",
                    "/cv-frontend/images/projects/Orgstructure/4.png",
                    "/cv-frontend/images/projects/Orgstructure/5.png",
                    "/cv-frontend/images/projects/Orgstructure/6.png",
                    "/cv-frontend/images/projects/Orgstructure/7.png",
                    "/cv-frontend/images/projects/Orgstructure/8.png",
                    "/cv-frontend/images/projects/Orgstructure/9.png",
                    "/cv-frontend/images/projects/Orgstructure/10.png",
                    "/cv-frontend/images/projects/Orgstructure/11.png"
                ]
            },
            {
                "name": "Makatels-bot",
                "summary" : "Telegram-бот с разнообразным функционалом ",
                "repo": "https://github.com/mspolermo/makatels-bot",
                "ghPage": null,
                "important": true,
                "skills": [
                    "Node.JS",
                    "React",
                    "Vue",
                    "TypeScript",
                    "JavaScript",
                    "OOP"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Данный Telegram бот разработан с целью облегчить процесс запроса зеркал для сайта с фильмами. Он предоставляет удобный интерфейс для отправки запроса на получение зеркала и позволяет открыть последнее письмо с ссылкой на зеркало. Бот написан на Node.js и активно использует различные библиотеки для работы с Telegram API, электронной почтой и IMAP-серверами."
                    },
                    {
                        "title": "Основные функции:",
                        "info": [
                            "Получение/обновление уникальной ссылки на сайты с фильмами без прав на прокат;",
                            "Отображение актуальных сервисов такси в Полевском;",
                            "Мини-приложение Расписание автобусов с возможностью посмотреть расписание/обратное расписание автобусов Полевской - Екатеринбург (версии на React и VUE). Парсинг данных на Express;",
                            "Пожаловаться на работу бота/предложить функционал."
                        ]
                    },
                    {
                        "title": "Установка и запуск",
                        "info": [
                            "Скопировать репозиторий на хостинг",
                            "Выполнить команду 'npm install' в корне проекта",
                            "Запустить с помощью 'npm start'",
                            "В данный момент бот доступен по адресу @makatels-films-bot в telegram."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Makatels-bot/1.png",
                    "/cv-frontend/images/projects/Makatels-bot/2.png",
                    "/cv-frontend/images/projects/Makatels-bot/3.png",
                    "/cv-frontend/images/projects/Makatels-bot/4.png",
                    "/cv-frontend/images/projects/Makatels-bot/5.png",
                    "/cv-frontend/images/projects/Makatels-bot/6.png",
                    "/cv-frontend/images/projects/Makatels-bot/7.png"
                ]
            },
            {
                "name": "CV-frontend",
                "summary" : "Реализация интерактивного резюме",
                "repo": "https://github.com/mspolermo/cv-frontend",
                "ghPage" : "https://mspolermo.github.io/cv-frontend/",
                "important": true,
                "skills": [
                    {
                        "title": "React", 
                        "value" : [
                            "Redux",
                            "Axios",
                            "I18n",
                            "React-router"
                        ]
                    },
                    "TypeScript",
                    "Vite",
                    "SCSS",
                    "Git"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Проект представляет собой интерактивное резюме, разработанное с использованием TypeScript и React, а также дополнительных библиотек, таких как Redux, Axios, i18n и React-router. Верстка выполнена с помощью SCSS."
                    },
                    {
                        "title": "Инструкция по запуску проекта",
                        "info": [
                            "Склонировать репозиторий на ПК",
                            "Переключиться на master ветку с помощью команды `git checkout master` в терминале в корне проекта",
                            "Запустить с помощью команды `npm start` в терминале в корне проекта"
                        ]
                    },
                    {
                        "title": "Функционал и внешний вид",
                        "info": [
                            {
                                "titleL2": "Главная страница",
                                "infoL2": [
                                    "Краткая информация о проектах, опыте работы, образовании и о себе",
                                    "Навигация на страницы с полной информацией"
                                ]
                            },
                            {
                                "titleL2": "Шапка портала",
                                "infoL2": [
                                    {
                                        "titleL3": "Блок панели управления",
                                        "infoL3": [
                                            "Возможность сменить язык",
                                            "Функционал печати резме на 1 страницу",
                                            "Реализация смены цветового оформления"
                                        ]
                                    },
                                    {
                                        "titleL3": "Хлебные крошки",
                                        "infoL3": [
                                            "Навигация на предыдущие разделы сайта по клику ",
                                            "Поддержка английского и русского языка"
                                        ]
                                    }
                                ]
                            },
                            {
                                "titleL2": "Меню сайта",
                                "infoL2": [
                                    "Слайдер с фотографиями",
                                    {
                                        "titleL3": "Блок контактов",
                                        "infoL3": [
                                            "По клику на пункт `Контакты` открывается страница с контактной информацией",
                                            "Интерактивные кнопки"
                                        ]
                                    },
                                    {
                                        "titleL3": "Блок навыков",
                                        "infoL3": [
                                            "По клику на заголовок навыков открывается страница с полным списком навыков",
                                            "По клику на определенный навык открывается страница с сылками на проекты/опыт работы, подтверждающие получение навыка"
                                        ]
                                    },
                                    "Реализован адаптивный дизайн, позволяющий сворачивать и разворачивать меню при необходимости."
                                ]
                            },
                            {
                                "titleL2": "Страница `Проекты`",
                                "infoL2": [
                                    {
                                        "titleL3": "Краткое описание проектов",
                                        "infoL3": [
                                            "Название",
                                            "Информация о проекте",
                                            "Навыки полученные на проекте",
                                            "Превью"
                                        ]
                                    },
                                    "По клику на название проекта открывается страница проекта с полной информацией"
                                ]
                            },
                            {
                                "titleL2": "Страница конкретного проекта",
                                "infoL2": [
                                    "Полная информация о проекте",
                                    "Функциональные кнопки GitHub и GitHub Pages для просмотра репозитория и самого проекта, размещенного на GitHub Pages",
                                    "Слайдер со скриншотами проекта",
                                    {
                                        "titleL3": "Теги навыков, полученных на проекте",
                                        "infoL3": [
                                            "По клику на тег навыка открывается страница с сылками на проекты/опыт работы, подтверждающие получение навыка"
                                        ]
                                    }
                                ]
                            },
                            {
                                "titleL2": "Страница `Опыт работы`",
                                "infoL2": [
                                    {
                                        "titleL3": "Краткое описание опыта работы",
                                        "infoL3": [
                                            "Суммарное время работы в компании",
                                            "Описание",
                                            "Навыки полученные на работе"
                                        ]
                                    },
                                    "По клику на название должности открывается страница с полной информацией."
                                ]
                            },
                            {
                                "titleL2": "Страница работы",
                                "infoL2": [
                                    "Полная информация о рабочих обязанностях",
                                    "Суммарное время работы в компании",
                                    {
                                        "titleL3": "Теги навыков полученных на работе",
                                        "infoL3": [
                                            "По клику на тег навыка открывается страница с сылками на проекты/опыт работы, подтверждающие получение навыка"
                                        ]
                                    }
                                ]
                            },
                            {
                                "titleL2": "Страница `Образование`",
                                "infoL2": [
                                    "Информация об образовании и пройденых курсах"
                                ]
                            },
                            {
                                "titleL2": "Страница `Обо мне`",
                                "infoL2": [
                                    "Информация о себе"
                                ]
                            },
                            {
                                "titleL2": "Страница `Контакты`",
                                "infoL2": [
                                    "Страница с интерактивными кнопками для связи."
                                ]
                            },
                            {
                                "titleL2": "Страница `Навыки`",
                                "infoL2": [
                                    "Список всех навыков, полученных на проектах",
                                    "По клику на конкретный навык открывается страница с ссылками на проекты и опыт работы, подтверждающие получение навыка."
                                ]
                            }
                        ]
                    },
                    {
                        "title": "Дополнительная информация",
                        "info": [
                            "Проект реализован с поддержкой планшетной, мобильной и версии для одностраничной печати.",
                            "Приложение поддерживает различные языки и предоставляет возможность выбора языка интерфейса.",
                            "Все данные, необходимые для отображения резюме, получает из JSON-файла."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/CV-frontend/1.jpg",
                    "/cv-frontend/images/projects/CV-frontend/2.jpg",
                    "/cv-frontend/images/projects/CV-frontend/3.jpg",
                    "/cv-frontend/images/projects/CV-frontend/4.jpg",
                    "/cv-frontend/images/projects/CV-frontend/5.jpg",
                    "/cv-frontend/images/projects/CV-frontend/6.jpg",
                    "/cv-frontend/images/projects/CV-frontend/7.jpg"
                ]
            },
            {
                "name": "Movies Platform",
                "summary" : "Упрощенная версия портала фильмов. В качестве дизайна за основу взят сайт ivi.ru",
                "repo": "https://github.com/mspolermo/movies-website",
                "ghPage" : "https://mspolermo.github.io/movies-website/",
                "important": true,
                "skills": [
                    {
                        "title": "React", 
                        "value" : [
                            "Redux",
                            "Axios",
                            "I18n",
                            "Storybook",
                            "JWT",
                            "React-router",
                            "React testing library"
                        ]
                    },
                    "TypeScript",
                    "Webpack",
                    "SCSS",
                    "Git",
                    "Team work"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Написано с помощью TypeScript, React (redux, axios, i18n, storybook), SCSS. Покрытие тестами - react testing library."
                    },
                    {
                        "title": "Инструкция по запуску проекта",
                        "info": "Для демонстрации полноценного функционала необходимо поднимать бэкенд в докере, максимально урезанную версию (без бэкенда) можно посмотреть на ghpages. Полная инструкция по запуску приложения размещена на github"
                    },
                    {
                        "title": "Функционал и внешний вид портала",
                        "info": [
                            "Главная страница",
                            {
                                "titleL2": "Страница списка фильмов (/films/)",
                                "infoL2": [
                                {
                                    "titleL3": "Функциональные фильтры",
                                    "infoL3": [
                                        "По странам/жанрам/годам",
                                        "По рейтингу - возможность вводить конкретное значение ползунком с точностью до десятых",
                                        "По количеству оценок - возможность вводить конкретное значение ползунком",
                                        "По режиссеру/ по актеру. Поле ввода ведет себя как автосаджест (подсказывает по первым буквам подходящих режиссеров)",
                                        "Все фильтры разом доступны на странице /movies/ и сразу при выборе пользователя применяются без перезагрузки страницы",
                                        "Выбор жанров влияет на хлебные крошки"
                                    ]
                                },
                                {
                                    "titleL3": "Сортировка",
                                    "infoL3" : [
                                        "По количеству оценок",
                                        "По рейтингу",
                                        "По дате выхода (сначала свежие)",
                                        "По алфавиту"
                                    ]
                                },
                                {
                                    "titleL3": "Сортировка",
                                    "infoL3" : [
                                        "По количеству оценок",
                                        "По рейтингу",
                                        "По дате выхода (сначала свежие)",
                                        "По алфавиту"
                                    ]
                                },
                                "Список карточек со всеми эффектами верстки (но по функционалу только переход к конкретному фильму)"
                            ]
                                
                            },
                            {
                                "titleL2": "Страница конкретного фильма (/film/:id)",
                                "infoL2": [
                                    "Трейлер",
                                    "Описание фильма с реальными данными",
                                    "Создание отзывов и комментариев к фильму"
                                ]
                            },
                            "Страница актера (/person/:id)",
                            {
                                "titleL2": "Страница авторизации (/auth/)",
                                "infoL2": [
                                    "Авторизация по почте/паролю, аккаунту google, аккаунту Vk"
                                ]
                            },
                            {
                                "titleL2": "Страница администратора (/admin)",
                                "infoL2": [
                                    "Доступ только у администратора (проверка на бэкенде, ссылка появляется в шапке при наличии роли)",
                                    "Возможность редактировать названия фильма (для фильмов) и название жанра (для жанров) на русском и английском языке"
                                ]
                            },
                            "Поиск",
                            "Функционал перевода сайта на английский язык (переключатель в шапке)"
                            
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Movies-website/1.jpg",
                    "/cv-frontend/images/projects/Movies-website/2.jpg",
                    "/cv-frontend/images/projects/Movies-website/3.jpg",
                    "/cv-frontend/images/projects/Movies-website/4.jpg",
                    "/cv-frontend/images/projects/Movies-website/5.jpg",
                    "/cv-frontend/images/projects/Movies-website/6.jpg",
                    "/cv-frontend/images/projects/Movies-website/7.jpg",
                    "/cv-frontend/images/projects/Movies-website/8.jpg",
                    "/cv-frontend/images/projects/Movies-website/9.jpg",
                    "/cv-frontend/images/projects/Movies-website/10.jpg",
                    "/cv-frontend/images/projects/Movies-website/11.jpg",
                    "/cv-frontend/images/projects/Movies-website/12.jpg",
                    "/cv-frontend/images/projects/Movies-website/13.jpg",
                    "/cv-frontend/images/projects/Movies-website/14.jpg"
                ]
            },
            {
                "name": "Articles Platform",
                "summary" : "Веб-приложение для просмотра и публикации статей",
                "repo": "https://github.com/mspolermo/production-project",
                "ghPage" : "https://fluffy-semifreddo-7d715d.netlify.app/",
                "important": true,
                "skills": [
                    {
                        "title": "React", 
                        "value" : [
                            "Redux",
                            "Axios",
                            "Sttorybook",
                            "I18n",
                            "React-router",
                            "Jest",
                            "Cypress",
                            "Husky",
                            "Vite"
                        ]
                    },
                    "TypeScript",
                    "Webpack",
                    "SCSS",
                    "Git"
                ],
                "description" : [
                    {
                        "title": "О проекте",
                        "info": "Articles Platform — это веб-приложение для просмотра и публикации статей, разработанное с помощью React, Vite, Webpack, Redux и прочих технолочий. Проект предоставляет собой удобный интерфейс для управления статьями, пользователями и пользовательскими данными. Включает в себе версию с 2 видами дизайна и различными темами оформления. Внедрена поддержка перевода интерфейса на русский и английский языки."
                    },
                    {
                        "title": "Архитектура проекта",
                        "info": [
                            "Проект написан в соответствии с методологией Feature sliced design"
                        ]
                    },
                    {
                        "title": " Тесты",
                        "info": [
                            {
                                "titleL2": "В проекте используются 4 вида тестов:",
                                "infoL2": [
                                    "Обычные unit тесты на jest",
                                    "Тесты на компоненты с React testing library",
                                    "Скриншотное тестирование с loki",
                                    "E2e тестирование с Cypress"
                                ]
                            }
                        ]
                    },
                    {
                        "title": "Storybook",
                        "info": [
                            "В проекте для каждого компонента описываются стори-кейсы. Запросы на сервер мокаются с помощью storybook-addon-mock."
                        ]
                    },
                    {
                        "title": "CI pipeline и pre commit хуки",
                        "info": [
                            "Конфигурация github actions находится в /.github/workflows. В ci прогоняются все виды тестов, сборка проекта, линтинг. После прохождения тестов, формируется отчет для ghPages",
                            "В прекоммит хуках проверяем проект линтерами, конфиг в /.husky"
                        ]
                    },
                    {
                        "title": "Работа с данными",
                        "info": [
                            "Взаимодействие с данными осуществляется с помощью redux toolkit. По возможности переиспользуемые сущности необходимо нормализовать с помощью EntityAdapter",
                            "Запросы на сервер отправляются с помощью RTK query",
                            "Для асинхронного подключения редюсеров (чтобы не тянуть их в общий бандл) используется DynamicModuleLoader"
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Articles/1.png",
                    "/cv-frontend/images/projects/Articles/2.png",
                    "/cv-frontend/images/projects/Articles/3.png",
                    "/cv-frontend/images/projects/Articles/4.png",
                    "/cv-frontend/images/projects/Articles/5.png",
                    "/cv-frontend/images/projects/Articles/6.png",
                    "/cv-frontend/images/projects/Articles/7.png",
                    "/cv-frontend/images/projects/Articles/8.png"
                ]
            },
            {
                "name": "Music Platform (PWA)",
                "summary" : "Веб-приложение для прослушивания музыки",
                "repo": "https://github.com/mspolermo/music-platform-vue",
                "ghPage" : "https://music-platform-a8axons85-mspolermos-projects.vercel.app/",
                "important": true,
                "skills": [
                    {
                        "title": "Vue", 
                        "value" : [
                            "Pinia",
                            "Cypress",
                            "Vitest",
                            "Firebase"
                        ]
                    },
                    "TypeScript",
                    "Vite",
                    "Tailwind"

                ],
                "description" : [
                    {
                        "title": "О проекте",
                        "info": "Music Platform — это веб-приложение для прослушивания музыки, разработанное с использованием Vue 3, Vite и Firebird. Проект предоставляет пользователям удобный интерфейс для управления музыкальными треками, создания плейлистов и прослушивания музыки."
                    },
                    {
                        "title": "Используемые технологии",
                        "info": [
                            "Vue 3 — современный фреймворк для создания пользовательских интерфейсов.",
                            "Vite — инструмент для быстрой сборки и разработки.",
                            "Tailwind CSS — утилитарный CSS-фреймворк для создания адаптивного дизайна.",
                            "Cypress и Vitest — для End-to-End и Unit тестирования.",
                            "Firebase — облачная платформа для хранения данных пользователей и музыкальных треков, обеспечивающая надежное и эффективное управление данным"
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/MusicPlatform/1.png",
                    "/cv-frontend/images/projects/MusicPlatform/2.png",
                    "/cv-frontend/images/projects/MusicPlatform/3.png",
                    "/cv-frontend/images/projects/MusicPlatform/4.png"
                ]
            },
            {
                "name": "Music Platform (SSR)",
                "summary" : "Платформа для потокового воспроизведения музыки",
                "repo": "https://github.com/mspolermo/music-platform",
                "ghPage" : null,
                "important": true,
                "skills": [
                    "Nest",
                    "Next",
                    {
                        "title": "React", 
                        "value" : [
                            "Redux",
                            "MaterialUI"
                        ]
                    },
                    "MongoDB",
                    "TypeScript"

                ],
                "description" : [
                    {
                        "title": "О проекте",
                        "info": "Открытая платформа для потокового воспроизведения музыки, созданная с использованием TypeScript, NestJS, MongoDB, NextJS/ReactJS, MaterialUi."
                    },
                    {
                        "title": "Функционал",
                        "info": [
                            "Потоковое воспроизведение музыки из библиотеки",
                            "Современный и адаптивный интерфейс",
                            "Поиск песен",
                            "Возможность добавлять, удалять песни, изображение песни, текст"
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/MusicPlatform/1.png"
                ]
            },
            {
                "name": "Photo gallery",
                "summary" : "Веб-приложение для просмотра и добавления фотографий ",
                "repo": "https://github.com/mspolermo/gallery",
                "ghPage" : "https://mspolermo.github.io/gallery/",
                "important": false,
                "skills": [
                    {
                        "title": "Vue", 
                        "value" : [
                            "Vuetify",
                            "Vuex"
                        ]
                    },
                    "SAAS",
                    "TypeScript"

                ],
                "description" : [
                    {
                        "title": "О проекте",
                        "info": "Простое приложение для просмотра и добавления фотографий на Vue.js с использованием Vuex и Vue Router. Данные берутся асинхронно с fake-API JSONPlaceholder."
                    },
                    {
                        "title": "Функционал",
                        "info": [
                            "На главной странице отображается список фотографий.",
                            "Нажмите на фотографию, чтобы открыть диалоговое окно с полноразмерным изображением и названием фотографии.",
                            "Нажмите кнопку Добавить на главной странице, чтобы загрузить новую фотографию."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/PhotoGallery/1.png"
                ]
            },
            {
                "name": "Chess game",
                "summary" : "Игра в шахматы",
                "repo": "https://github.com/mspolermo/chess-game",
                "ghPage" : null,
                "important": false,
                "skills": [
                    "React",
                    "TypeScript",
                    "OOP"
                ],
                "description" : [
                    {
                        "title": "О проекте",
                        "info": "Игра в шахматы на классовом React"
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/ChessGame/1.png",
                    "/cv-frontend/images/projects/ChessGame/2.png",
                    "/cv-frontend/images/projects/ChessGame/3.png"
                ]
            },
            {
                "name": "Posts-web-app (React)",
                "summary" : "Веб-приложение с постами, получаемыми через API JSONPlaceholder",
                "repo": "https://github.com/mspolermo/posts-web",
                "ghPage": "https://mspolermo.github.io/posts-web/",
                "important": false,
                "skills": [
                    "TypeScript",
                    {
                        "title": "React", 
                        "value" : [
                            "Redux",
                            "Axios",
                            "React-router",
                            "React-bootstrap"
                        ]
                    },
                    "Rest_API",
                    "SCSS",
                    "Git"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Написано с помощью React (React-bootstrap, React-router, Axios, Redux), TypeScript, SCSS"
                    },
                    {
                        "title": "Инструкция по запуску проекта",
                        "info": [
                            "Склонировать репозиторий на ПК",
                            "Переключиться на master ветку с помощью команды `git checkout master` в терминале в корне проекта",
                            "Запустить с помощью команды `npm start` в терминале в корне проекта"
                        ]
                    },
                    {
                        "title": "Функционал и внешний вид портала",
                        "info": [
                            {
                                "titleL2": "Главная страница (список постов)",
                                "infoL2": [
                                    "Содержит список всех постов",
                                    "Каждый пост состоит из заголовка, текста, аватара автора и списка комментариев",
                                    "Заголовок и текст получены из API",
                                    "При клике на аватар происходит переход на страницу `Подробности о пользователе`",
                                    "Список комментариев изначально скрыт, доступна лишь кнопка `Комментарии`. При нажатии на кнопку `Комментарии`,показывается список комментариев к данному посту. При повторном нажатии список скрывается",
                                    "Комментарий состоит из заголовка(email) и текста",
                                    "Присутствует хэдер с «меню-бургером». При нажатии на него слева всплывает навигационное меню, где присутствует 2 ссылки на страницы `Главная страница` (список постов) и `Обо мне`, а также отображается аватар, имя и почтовый адрес",
                                    "Возможность поиска по заголовку поста, с возможностью очистки поля через крестик",
                                    "Возможность сортировки по заголовку поста",
                                    "Присутствует пагинация"
                                ]
                                
                            },
                            {
                                "titleL2": "Страница `Обо мне`",
                                "infoL2": [
                                    "Немного информации о себе",
                                    "Возможность скачать CV"
                                ]
                            },
                            {
                                "titleL2": "Страница `Подробности о пользователе` (переход при нажатии по аватару у поста)",
                                "infoL2": [
                                    "Карточка, куда выводится краткая информация о пользователе, соответствующая автору поста",
                                    "Список постов принадлежащих только данному пользователю",
                                    "Кнопка «Назад», при нажатии на которую произойдет переход на главную страницу"
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Posts-web-app/1.jpg",
                    "/cv-frontend/images/projects/Posts-web-app/2.jpg",
                    "/cv-frontend/images/projects/Posts-web-app/3.jpg",
                    "/cv-frontend/images/projects/Posts-web-app/4.jpg"
                ]
            },
            {
                "name": "Posts-web-app (Vue)",
                "summary" : "Веб-приложение для просмотра и добавления постов",
                "repo": "https://github.com/mspolermo/vue3-project",
                "ghPage" : null,
                "important": false,
                "skills": [
                    {
                        "title": "Vue", 
                        "value" : [
                            "Vuex",
                            "Axios"
                        ]
                    },
                    "JavaScript"

                ],
                "description" : [
                    {
                        "title": "О проекте",
                        "info": "Простое приложение для просмотра и добавления постов на Vue.js с использованием Vuex и Vue Router. Данные берутся асинхронно с fake-API JSONPlaceholder."
                    },
                    {
                        "title": "Функционал",
                        "info": [
                            "На главной странице отображается список постов.",
                            "Нажмите на кнопку Открыть, чтобы открыть страницу с постом.",
                            "Нажмите кнопку Создать пост, чтобы создать новый пост.",
                            "Нажмите кнопку Удалить, чтобы удалить пост."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Posts-web-app/vue.png"
                ]
            },
            {
                "name": "Sultan-web-app",
                "summary" : "Часть интернет-магазина (каталог товаров, страница товара, корзина, страница администратора) с адаптивом",
                "repo": "https://github.com/mspolermo/sultan-web-app",
                "ghPage": "https://mspolermo.github.io/sultan-web-app/",
                "important": false,
                "skills": [
                    "TypeScript",
                    {
                        "title": "React", 
                        "value" : [
                            "React-router",
                            "Jest",
                            "React testing library"
                        ]
                    },
                    "SCSS",
                    "Git"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Написано с помощью React, TypeScript, SCSS. Покрытие тестами - jest, react testing library"
                    },
                    {
                        "title": "Инструкция по запуску проекта",
                        "info": [
                            "Склонировать репозиторий на ПК",
                            "Переключиться на master ветку с помощью команды `git checkout master` в терминале в корне проекта",
                            "Запустить с помощью команды `npm start` в терминале в корне проекта"
                        ]
                    },
                    {
                        "title": "Функционал и внешний вид портала",
                        "info": [
                            {
                                "titleL2": "Шапка сайта",
                                "infoL2": [
                                    "Активная корзина"
                                ]
                                
                            },
                            {
                                "titleL2": "Страница `Каталог товаров` (список товаров)",
                                "infoL2": [
                                    "Сортировка товаров (4 варианта: по цене и по названию, по убыванию и возрастанию)",
                                    "Фильтры (По цене, по производителю, по типу товара (Уход за телом/ Уход за руками / Уход за ногами / Уход за лицом и пр.) )",
                                    "Кнопки постраничного перехода",
                                    "Переход на страницу `Карточка товара` по клику на товар (каждый товар открывается по своему url)",
                                    "Добавление товара в корзину по нажатию на кнопку `В корзину`"
                                ]
                            },
                            {
                                "titleL2": "Страница карточки товара",
                                "infoL2": [
                                    "Хлебные крошки (Главная - Каталог - Id товара)",
                                    "Картинка и информация о товаре (данные подставляются из JSON/ Local Stroage)",
                                    "Добавление товара в корзину по нажатию на кнопку `В корзину`"
                                ]
                            },
                            {
                                "titleL2": "Корзина",
                                "infoL2": [
                                    "Блок в шапке обновляется при действиях пользователя",
                                    "Активные кнопки +/-, удалить из корзины",
                                    "По нажатию кнопки `Оформить заказ` отображается модальное окно `Спасибо за заказ` и корзина очищается"
                                ]
                            },
                            {
                                "titleL2": "Страница администратора",
                                "infoL2": [
                                    "Возможность редактировать, добавлять, удалять товары. Сохранять это в localStorage",
                                    "Если список пуст (админ все удалил или с самого старта), то наполнение из json (предварительно подготовлен и добавлен в /src/goods/goodsJSON.json",
                                    "Возможность работать со списком типов ухода. При добавлении/редактировании тип ухода можно выбрать из списка"
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Sultan-web-app/1.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/2.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/3.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/4.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/5.jpg"
                ]
            },
            {
                "name": "Github-search-repositories",
                "summary" : "Веб-приложение с реализацией поиска репозиториев GitHub при помощи API GitHub",
                "repo": "https://github.com/mspolermo/Github-search-repositories",
                "ghPage": "https://mspolermo.github.io/Github-search-repositories",
                "important": false,
                "skills": [
                    "JavaScript",
                    "Rest_API",
                    "SCSS",
                    "WebPack",
                    "Git"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Написано с помощью JavaScript, SCSS. Приложение собрано с помощью WebPack"
                    },
                    {
                        "title": "Инструкция по запуску проекта",
                        "info": [
                            "Склонировать репозиторий на ПК",
                            "Переключиться на master ветку с помощью команды `git checkout master` в терминале в корне проекта",
                            "Запустить с помощью команды `npm start` в терминале в корне проекта"
                        ]
                    },
                    {
                        "title": "Функционал и внешний вид портала",
                        "info": [
                            "Форма срабатывает по кнопке `Search` или по нажатию клавиши Enter",
                            "Cписок с результатами выводит только первые 10 найденных репозиториев",
                            {
                                "titleL2": "Поле ввода (для подстроки поиска):",
                                "infoL2": [
                                    "Если символов недостаточно, то выдается сообщение об ошибке"
                                ]
                            },
                            "В результатах поиска выводится название репозитория, искользуемый язык, видимость, описание репозитория, автар, ник и id владельца репозитория",
                            {
                                "titleL2": "Название по совместительству является ссылкой на соответвующий git репозиторий",
                                "infoL2": [
                                    "Ссылки окрываются в новой вкладке браузера"
                                ]
                            },
                            {
                                "titleL2": "Дополнительно",
                                "infoL2": [
                                    "Изначально пустой список",
                                    "Если по запросу ничего не найдено, то вместо списка выводится сообщение `Sorry, nothing found`",
                                    "В случае возникновение ошибок при запросе к API, вместо списка выводится сообщение `ERROR - Something went wrong`"
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Github-search-repositories/1.jpg",
                    "/cv-frontend/images/projects/Github-search-repositories/2.jpg",
                    "/cv-frontend/images/projects/Github-search-repositories/3.jpg"
                ]
            },
            {
                "name": "News-web",
                "summary" : "Реализация страницы новостного сайта с функциональным блоком комментариев",
                "repo": "https://github.com/mspolermo/News-web",
                "ghPage": "https://mspolermo.github.io/News-web/",
                "important": false,
                "skills": [
                    "JavaScript",
                    "SCSS",
                    "WebPack",
                    "Git"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Написано с помощью JavaScript, SCSS. Приложение собрано с помощью WebPack"
                    },
                    {
                        "title": "Инструкция по запуску проекта",
                        "info": [
                            "Склонировать репозиторий на ПК",
                            "Переключиться на master ветку с помощью команды `git checkout master` в терминале в корне проекта",
                            "Запустить с помощью команды `npm start` в терминале в корне проекта"
                        ]
                    },
                    {
                        "title": "Функционал",
                        "info": [
                            "Комментарий создается при нажатии кнопки `Отправить` или при нажатии на кнопку Enter",
                            {
                                "titleL2": "Валидация. Если форма заполнена некорректно, то рядом с полем сообщение об ошибке",
                                "infoL2": [
                                {
                                    "titleL3": "Имя комментатора",
                                    "infoL3": [
                                        "Минимальная длина 2 буквы",
                                        "Запрет использования чисел и спецсимволов"
                                    ]
                                },
                                {
                                    "titleL3": "Текст комментария",
                                    "infoL3" : [
                                        "Минимальная длина 1 символ"
                                    ]
                                },
                                "При продолжении печати в поле ввода ошибка исчезает"
                            ]
                            },
                            "Комментарии можно удалять, по нажатию кнопки удаления (иконки корзины)",
                            "Комментариям можно выставлять и убирать лайки",
                            "При добавлении нового коментария счетчики комментариев вверху странцы и в блоке комментариев обновляются автоматически"
                        ]
                    },
                    {
                        "title": "Внешний вид",
                        "info": [
                            {
                                "titleL2": "Форма добавления коментария:",
                                "infoL2": [
                                    "Имя комментатора",
                                    "Текст комментария",
                                {
                                    "titleL3": "Возможность указать дату или оставить ее пустой",
                                    "infoL3": [
                                        "Если дата не задана, то автоматически подставляется текущая дата"
                                    ]
                                },
                                    "Кнопка отправки"
                                ]
                            },
                            {
                                "titleL2": "Список комментариев:",
                                "infoL2": [
                                    "Имя комментатора",
                                    "Текст комментария",
                                {
                                    "titleL3": "Дата, время добавления",
                                    "infoL3": [
                                        "Если текущая дата: `Сегодня, 16:23` (ключевое - слово сегодня, время подставляется)",
                                        "Если вчерашняя дата: `Вчера, 18:39` (ключевое - слово вчера, рандомное время генерируется и подставляется автоматически)",
                                        "Другие даты отображаются в формате `год-месяц-день`, рандомное время генерируется и подставляется автоматически"
                                    ]
                                },
                                    "Кнопка удаления комментария (иконка корзины)",
                                    "Сердечко лайка"
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/News-web/1.jpg",
                    "/cv-frontend/images/projects/News-web/2.jpg",
                    "/cv-frontend/images/projects/News-web/3.jpg",
                    "/cv-frontend/images/projects/News-web/4.jpg"
                ]
            },
            {
                "name": "Evklid-web",
                "summary" : "Pixel-perfect верстка страницы по макету, с реализацией адаптива, слайдера и аккордеона",
                "repo": "https://github.com/mspolermo/Evklid-web",
                "ghPage": "https://mspolermo.github.io/Evklid-web/",
                "important": false,
                "skills": [
                    "JavaScript",
                    "SCSS",
                    "WebPack",
                    "Git",
                    "Swiper",
                    "jQuery"
                ],
                "description" : [
                    {
                        "title": "Описание",
                        "info": "Написано с помощью SCSS, JavaScript, Swiper, jQuery (Accordion). Проект собран с помощью Webpack."
                    },
                    {
                        "title": "Инструкция по запуску проекта",
                        "info": [
                            "Склонировать репозиторий на ПК",
                            "Переключиться на master ветку с помощью команды `git checkout master` в терминале в корне проекта",
                            "Запустить с помощью команды `npm start` в терминале в корне проекта"
                        ]
                    },
                    {
                        "title": "Функционал и внешний вид",
                        "info": [
                            "Анимация и выделение по наведению/фокусеровке на кнопки, формы, ссылки",
                            "Реализован слайдер, аккардеон, табы",
                            "В планшетной и мобильной версии сайта меню сайта окрывается с помощью нажатия на кнопку бургер-меню"
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Evklid-web/1.jpg",
                    "/cv-frontend/images/projects/Evklid-web/2.jpg",
                    "/cv-frontend/images/projects/Evklid-web/3.jpg",
                    "/cv-frontend/images/projects/Evklid-web/4.jpg",
                    "/cv-frontend/images/projects/Evklid-web/5.jpg"
                ]
            }
        ],
        "en": [
            {
                "name": "ORGSTRUCTURE",
                "summary": "Visualization of the organizational structure of an enterprise",
                "repo": "https://github.com/mspolermo/org-structure",
                "ghPage": null,
                "important": true,
                "skills": [
                    "Nest",
                    "PostgreSQL",
                    "React",
                    "Node.JS",
                    "MobX",
                    "Swagger",
                    "Sequelize",
                    "JWT",
                    "TypeScript"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "OrgStructure is a comprehensive platform designed to simplify reference data management, administration, and visualization of an enterprise's organizational structure."
                    },
                    {
                        "title": "The project consists of three key components:",
                        "info": [
                            "Client-side (Front-End) — the user interface that provides interaction with the system.",
                            "Server-side (Back-End) — the server application responsible for business logic and data processing.",
                            "Extension — a browser extension that complements the platform's functionality."
                        ]
                    },
                    {
                        "title": "Client-side:",
                        "info": [
                            "Visualization of organizational structures.",
                            "User-friendly interface for creating, editing, and viewing data."
                        ]
                    },
                    {
                        "title": "Server-side:",
                        "info": [
                            "API for processing organizational structure data.",
                            "Authorization and authentication.",
                            "Database operations."
                        ]
                    },
                    {
                        "title": "Browser extension:",
                        "info": [
                            "Quick access to the platform's core functions through the browser.",
                            "Integration with the client-side."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Orgstructure/1.png",
                    "/cv-frontend/images/projects/Orgstructure/2.png",
                    "/cv-frontend/images/projects/Orgstructure/3.png",
                    "/cv-frontend/images/projects/Orgstructure/4.png",
                    "/cv-frontend/images/projects/Orgstructure/5.png",
                    "/cv-frontend/images/projects/Orgstructure/6.png",
                    "/cv-frontend/images/projects/Orgstructure/7.png",
                    "/cv-frontend/images/projects/Orgstructure/8.png",
                    "/cv-frontend/images/projects/Orgstructure/9.png",
                    "/cv-frontend/images/projects/Orgstructure/10.png",
                    "/cv-frontend/images/projects/Orgstructure/11.png"
                ]
            },            
            {
                "name": "Makatels-bot",
                "summary": "Telegram bot with diverse functionality",
                "repo": "https://github.com/mspolermo/makatels-bot",
                "ghPage": null,
                "important": true,
                "skills": [
                    "Node.JS",
                    "React",
                    "Vue",
                    "TypeScript",
                    "JavaScript",
                    "OOP"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "This Telegram bot is designed to simplify the process of requesting mirrors for a movie website. It provides a user-friendly interface for submitting mirror requests and allows opening the latest email with a mirror link. The bot is written in Node.js and actively uses various libraries for working with the Telegram API, email, and IMAP servers."
                    },
                    {
                        "title": "Main features:",
                        "info": [
                            "Retrieve/update a unique link to websites with unlicensed movies;",
                            "Display up-to-date taxi services in Polevskoy;",
                            "Mini-app for Bus Schedules with the ability to view schedules/return schedules for Polevskoy - Yekaterinburg buses;",
                            "Report bot issues/suggest functionality."
                        ]
                    },
                    {
                        "title": "Installation and launch",
                        "info": [
                            "Clone the repository to a hosting server",
                            "Run the command 'npm install' in the project root",
                            "Start using 'npm start'",
                            "The bot is currently available at @makatels-films-bot on Telegram."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Makatels-bot/1.png",
                    "/cv-frontend/images/projects/Makatels-bot/2.png",
                    "/cv-frontend/images/projects/Makatels-bot/3.png",
                    "/cv-frontend/images/projects/Makatels-bot/4.png",
                    "/cv-frontend/images/projects/Makatels-bot/5.png",
                    "/cv-frontend/images/projects/Makatels-bot/6.png",
                    "/cv-frontend/images/projects/Makatels-bot/7.png"
                ]
            },
            {
                "name": "CV-frontend",
                "summary": "Interactive resume implementation",
                "repo": "https://github.com/mspolermo/cv-frontend",
                "ghPage": "https://mspolermo.github.io/cv-frontend/",
                "important": true,
                "skills": [
                    {
                        "title": "React",
                        "value": [
                            "Redux",
                            "Axios",
                            "I18n",
                            "React-router"
                        ]
                    },
                    "TypeScript",
                    "Vite",
                    "SCSS",
                    "Git"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "The project is an interactive resume developed using TypeScript and React, as well as additional libraries such as Redux, Axios, i18n, and React-router. The layout is implemented with SCSS."
                    },
                    {
                        "title": "Instructions for project launch",
                        "info": [
                            "Clone the repository to your PC",
                            "Switch to the master branch using the command `git checkout master` in the terminal in the project root",
                            "Start using the command `npm start` in the terminal in the project root"
                        ]
                    },
                    {
                        "title": "Functionality and appearance",
                        "info": [
                            {
                                "titleL2": "Homepage",
                                "infoL2": [
                                    "Brief information about projects, work experience, education, and personal details",
                                    "Navigation to pages with full information"
                                ]
                            },
                            {
                                "titleL2": "Portal header",
                                "infoL2": [
                                    {
                                        "titleL3": "Control panel block",
                                        "infoL3": [
                                            "Language switching capability",
                                            "Resume printing functionality (one-page format)",
                                            "Theme color customization"
                                        ]
                                    },
                                    {
                                        "titleL3": "Breadcrumbs",
                                        "infoL3": [
                                            "Navigation to previous sections of the site by clicking",
                                            "Supports English and Russian languages"
                                        ]
                                    }
                                ]
                            },
                            {
                                "titleL2": "Site menu",
                                "infoL2": [
                                    "Photo slider",
                                    {
                                        "titleL3": "Contacts block",
                                        "infoL3": [
                                            "Clicking 'Contacts' opens a page with contact information",
                                            "Interactive buttons"
                                        ]
                                    },
                                    {
                                        "titleL3": "Skills block",
                                        "infoL3": [
                                            "Clicking on the skills header opens a page with the full list of skills",
                                            "Clicking on a specific skill opens a page with links to projects/work experience that verify the skill"
                                        ]
                                    },
                                    "Adaptive design that allows collapsing and expanding the menu when needed."
                                ]
                            },
                            {
                                "titleL2": "Projects page",
                                "infoL2": [
                                    {
                                        "titleL3": "Project overview",
                                        "infoL3": [
                                            "Title",
                                            "Project information",
                                            "Skills gained on the project",
                                            "Preview"
                                        ]
                                    },
                                    "Clicking on the project title opens a page with full project information"
                                ]
                            },
                            {
                                "titleL2": "Specific project page",
                                "infoL2": [
                                    "Full project details",
                                    "Functional GitHub and GitHub Pages buttons for viewing the repository and the project hosted on GitHub Pages",
                                    "Slider with project screenshots",
                                    {
                                        "titleL3": "Skill tags acquired in the project",
                                        "infoL3": [
                                            "Clicking on a skill tag opens a page with links to projects/work experience that confirm the skill"
                                        ]
                                    }
                                ]
                            },
                            {
                                "titleL2": "Work experience page",
                                "infoL2": [
                                    {
                                        "titleL3": "Work experience overview",
                                        "infoL3": [
                                            "Total time spent in the company",
                                            "Description",
                                            "Skills gained at work"
                                        ]
                                    },
                                    "Clicking on the job title opens a page with full details."
                                ]
                            },
                            {
                                "titleL2": "Work details page",
                                "infoL2": [
                                    "Complete information about job responsibilities",
                                    "Total time spent in the company",
                                    {
                                        "titleL3": "Tags of skills gained at work",
                                        "infoL3": [
                                            "Clicking on a skill tag opens a page with links to projects/work experience that confirm the skill"
                                        ]
                                    }
                                ]
                            },
                            {
                                "titleL2": "Education page",
                                "infoL2": [
                                    "Information about education and completed courses"
                                ]
                            },
                            {
                                "titleL2": "About me page",
                                "infoL2": [
                                    "Personal information"
                                ]
                            },
                            {
                                "titleL2": "Contacts page",
                                "infoL2": [
                                    "Page with interactive buttons for communication."
                                ]
                            },
                            {
                                "titleL2": "Skills page",
                                "infoL2": [
                                    "List of all skills acquired in projects",
                                    "Clicking on a specific skill opens a page with links to projects and work experience that verify the skill."
                                ]
                            }
                        ]
                    },
                    {
                        "title": "Additional information",
                        "info": [
                            "The project is implemented with support for tablet, mobile, and single-page print versions.",
                            "The application supports multiple languages and allows users to choose the interface language.",
                            "All data required to display the resume is retrieved from a JSON file."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/CV-frontend/1.jpg",
                    "/cv-frontend/images/projects/CV-frontend/2.jpg",
                    "/cv-frontend/images/projects/CV-frontend/3.jpg",
                    "/cv-frontend/images/projects/CV-frontend/4.jpg",
                    "/cv-frontend/images/projects/CV-frontend/5.jpg",
                    "/cv-frontend/images/projects/CV-frontend/6.jpg",
                    "/cv-frontend/images/projects/CV-frontend/7.jpg"
                ]
            },
            {
                "name": "Movies Platform",
                "summary": "A simplified version of a movie portal. The design is inspired by the ivi.ru website.",
                "repo": "https://github.com/mspolermo/movies-website",
                "ghPage": "https://mspolermo.github.io/movies-website/",
                "important": true,
                "skills": [
                    {
                        "title": "React",
                        "value": [
                            "Redux",
                            "Axios",
                            "I18n",
                            "Storybook",
                            "JWT",
                            "React-router",
                            "React testing library"
                        ]
                    },
                    "TypeScript",
                    "Webpack",
                    "SCSS",
                    "Git",
                    "Team work"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "Developed using TypeScript, React (Redux, Axios, I18n, Storybook), and SCSS. Includes test coverage with React Testing Library."
                    },
                    {
                        "title": "Project Launch Instructions",
                        "info": "To demonstrate full functionality, the backend must be run in Docker. A minimal version (without the backend) is available on ghPages. Full instructions for launching the application are available on GitHub."
                    },
                    {
                        "title": "Functionality and Portal Interface",
                        "info": [
                            "Home Page",
                            {
                                "titleL2": "Movies List Page (/films/)",
                                "infoL2": [
                                    {
                                        "titleL3": "Functional Filters",
                                        "infoL3": [
                                            "By countries/genres/years",
                                            "By rating - allows users to input precise values using a slider with decimal accuracy",
                                            "By the number of ratings - allows precise input via slider",
                                            "By director/actor - input field with autosuggest functionality based on initial letters",
                                            "All filters are available simultaneously on the /movies/ page and apply instantly without page reloads",
                                            "Genre selection updates the breadcrumbs dynamically"
                                        ]
                                    },
                                    {
                                        "titleL3": "Sorting",
                                        "infoL3": [
                                            "By number of ratings",
                                            "By rating",
                                            "By release date (newest first)",
                                            "By alphabetical order"
                                        ]
                                    },
                                    "Card list with all styling effects (functional only for navigation to a specific movie)"
                                ]
                            },
                            {
                                "titleL2": "Movie Details Page (/film/:id)",
                                "infoL2": [
                                    "Trailer",
                                    "Detailed movie description",
                                    "Review and comment creation"
                                ]
                            },
                            "Actor Page (/person/:id)",
                            {
                                "titleL2": "Authentication Page (/auth/)",
                                "infoL2": [
                                    "Login with email/password, Google account, or VK account"
                                ]
                            },
                            {
                                "titleL2": "Admin Page (/admin)",
                                "infoL2": [
                                    "Access limited to admins (checked on backend, link visible only with admin role)",
                                    "Ability to edit movie titles and genres in Russian and English"
                                ]
                            },
                            "Search functionality",
                            "Website translation to English (toggle available in header)"
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Movies-website/1.jpg",
                    "/cv-frontend/images/projects/Movies-website/2.jpg",
                    "/cv-frontend/images/projects/Movies-website/3.jpg",
                    "/cv-frontend/images/projects/Movies-website/4.jpg",
                    "/cv-frontend/images/projects/Movies-website/5.jpg",
                    "/cv-frontend/images/projects/Movies-website/6.jpg",
                    "/cv-frontend/images/projects/Movies-website/7.jpg",
                    "/cv-frontend/images/projects/Movies-website/8.jpg",
                    "/cv-frontend/images/projects/Movies-website/9.jpg",
                    "/cv-frontend/images/projects/Movies-website/10.jpg",
                    "/cv-frontend/images/projects/Movies-website/11.jpg",
                    "/cv-frontend/images/projects/Movies-website/12.jpg",
                    "/cv-frontend/images/projects/Movies-website/13.jpg",
                    "/cv-frontend/images/projects/Movies-website/14.jpg"
                ]
            },
            {
                "name": "Articles Platform",
                "summary": "A web application for viewing and publishing articles.",
                "repo": "https://github.com/mspolermo/production-project",
                "ghPage": "https://fluffy-semifreddo-7d715d.netlify.app/",
                "important": true,
                "skills": [
                    {
                        "title": "React",
                        "value": [
                            "Redux",
                            "Axios",
                            "Storybook",
                            "I18n",
                            "React-router",
                            "Jest",
                            "Cypress",
                            "Husky",
                            "Vite"
                        ]
                    },
                    "TypeScript",
                    "Webpack",
                    "SCSS",
                    "Git"
                ],
                "description": [
                    {
                        "title": "About the Project",
                        "info": "Articles Platform is a web application for viewing and publishing articles, built with React, Vite, Webpack, Redux, and other technologies. It provides a user-friendly interface for managing articles, users, and their data. It includes two design versions with theme switching and supports interface translation between Russian and English."
                    },
                    {
                        "title": "Project Architecture",
                        "info": [
                            "The project follows the Feature Sliced Design methodology."
                        ]
                    },
                    {
                        "title": "Tests",
                        "info": [
                            {
                                "titleL2": "Four types of tests are used in the project:",
                                "infoL2": [
                                    "Standard unit tests with Jest",
                                    "Component tests with React Testing Library",
                                    "Screenshot tests with Loki",
                                    "E2E tests with Cypress"
                                ]
                            }
                        ]
                    },
                    {
                        "title": "Storybook",
                        "info": [
                            "Story cases are created for each component in the project. Server requests are mocked using the storybook-addon-mock plugin."
                        ]
                    },
                    {
                        "title": "CI Pipeline and Pre-Commit Hooks",
                        "info": [
                            "GitHub Actions configuration is located in /.github/workflows. CI runs all types of tests, project builds, and linting. After passing tests, a report is generated for ghPages.",
                            "Pre-commit hooks check the project with linters. Configuration is in /.husky."
                        ]
                    },
                    {
                        "title": "Data Handling",
                        "info": [
                            "Data interaction is implemented with Redux Toolkit. Reusable entities are normalized using EntityAdapter.",
                            "Server requests are handled with RTK Query.",
                            "DynamicModuleLoader is used for asynchronously connecting reducers (to avoid bundling them all together)."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Articles/1.png",
                    "/cv-frontend/images/projects/Articles/2.png",
                    "/cv-frontend/images/projects/Articles/3.png",
                    "/cv-frontend/images/projects/Articles/4.png",
                    "/cv-frontend/images/projects/Articles/5.png",
                    "/cv-frontend/images/projects/Articles/6.png",
                    "/cv-frontend/images/projects/Articles/7.png",
                    "/cv-frontend/images/projects/Articles/8.png"
                ]
            },
            {
                "name": "Music Platform (PWA)",
                "summary": "Web application for music listening",
                "repo": "https://github.com/mspolermo/music-platform-vue",
                "ghPage": "https://music-platform-a8axons85-mspolermos-projects.vercel.app/",
                "important": true,
                "skills": [
                    {
                        "title": "Vue",
                        "value": [
                            "Pinia",
                            "Cypress",
                            "Vitest",
                            "Firebase"
                        ]
                    },
                    "TypeScript",
                    "Vite",
                    "Tailwind"
                ],
                "description": [
                    {
                        "title": "About the Project",
                        "info": "Music Platform is a web application for listening to music, developed using Vue 3, Vite, and Firebase. The project offers users an intuitive interface for managing music tracks, creating playlists, and listening to music."
                    },
                    {
                        "title": "Technologies Used",
                        "info": [
                            "Vue 3 — a modern framework for building user interfaces.",
                            "Vite — a tool for fast build and development.",
                            "Tailwind CSS — a utility-first CSS framework for responsive design.",
                            "Cypress and Vitest — for End-to-End and Unit testing.",
                            "Firebase — a cloud platform for storing user data and music tracks, ensuring reliable and efficient data management."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/MusicPlatform/1.png",
                    "/cv-frontend/images/projects/MusicPlatform/2.png",
                    "/cv-frontend/images/projects/MusicPlatform/3.png",
                    "/cv-frontend/images/projects/MusicPlatform/4.png"
                ]
            },
            {
                "name": "Music Platform (SSR)",
                "summary": "A platform for music streaming",
                "repo": "https://github.com/mspolermo/music-platform",
                "ghPage": null,
                "important": true,
                "skills": [
                    "Nest",
                    "Next",
                    {
                        "title": "React",
                        "value": [
                            "Redux",
                            "MaterialUI"
                        ]
                    },
                    "MongoDB",
                    "TypeScript"
                ],
                "description": [
                    {
                        "title": "About the Project",
                        "info": "An open platform for music streaming, developed using TypeScript, NestJS, MongoDB, NextJS/ReactJS, and MaterialUI."
                    },
                    {
                        "title": "Features",
                        "info": [
                            "Music streaming from the library.",
                            "Modern and responsive interface.",
                            "Song search functionality.",
                            "Ability to add or delete songs, album images, and lyrics."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/MusicPlatform/1.png"
                ]
            },
            {
                "name": "Photo Gallery",
                "summary": "Web application for viewing and adding photos",
                "repo": "https://github.com/mspolermo/gallery",
                "ghPage": "https://mspolermo.github.io/gallery/",
                "important": false,
                "skills": [
                    {
                        "title": "Vue",
                        "value": [
                            "Vuetify",
                            "Vuex"
                        ]
                    },
                    "SAAS",
                    "TypeScript"
                ],
                "description": [
                    {
                        "title": "About the Project",
                        "info": "A simple application for viewing and adding photos built with Vue.js using Vuex and Vue Router. Data is fetched asynchronously from the fake API JSONPlaceholder."
                    },
                    {
                        "title": "Features",
                        "info": [
                            "The homepage displays a list of photos.",
                            "Click on a photo to open a dialog with a full-size image and the photo title.",
                            "Click the Add button on the homepage to upload a new photo."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/PhotoGallery/1.png"
                ]
            },            
            {
                "name": "Chess game",
                "summary": "Chess game",
                "repo": "https://github.com/mspolermo/chess-game",
                "ghPage": null,
                "important": false,
                "skills": [
                    "React",
                    "TypeScript",
                    "OOP"
                ],
                "description": [
                    {
                        "title": "About the project",
                        "info": "A chess game built with class-based React"
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/ChessGame/1.png",
                    "/cv-frontend/images/projects/ChessGame/2.png",
                    "/cv-frontend/images/projects/ChessGame/3.png"
                ]
            },
            {
                "name": "Posts-web-app (React)",
                "summary": "A web application for posts fetched via JSONPlaceholder API",
                "repo": "https://github.com/mspolermo/posts-web",
                "ghPage": "https://mspolermo.github.io/posts-web/",
                "important": false,
                "skills": [
                    "TypeScript",
                    {
                        "title": "React",
                        "value": [
                            "Redux",
                            "Axios",
                            "React-router",
                            "React-bootstrap"
                        ]
                    },
                    "REST API",
                    "SCSS",
                    "Git"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "Developed using React (React-bootstrap, React-router, Axios, Redux), TypeScript, SCSS"
                    },
                    {
                        "title": "Project launch instructions",
                        "info": [
                            "Clone the repository to your PC",
                            "Switch to the master branch using the `git checkout master` command in the terminal at the project root",
                            "Run the project using the `npm start` command in the terminal at the project root"
                        ]
                    },
                    {
                        "title": "Functionality and portal appearance",
                        "info": [
                            {
                                "titleL2": "Main page (list of posts)",
                                "infoL2": [
                                    "Displays a list of all posts",
                                    "Each post consists of a title, body, author's avatar, and a list of comments",
                                    "The title and body are fetched from the API",
                                    "Clicking on the avatar navigates to the `User Details` page",
                                    "The comments list is initially hidden, only a `Comments` button is available. Clicking `Comments` displays the list of comments for that post. Clicking again hides the list",
                                    "A comment includes a title (email) and text",
                                    "A header with a burger menu. Clicking it reveals a navigation menu on the left with links to `Main page` (post list) and `About me`, along with the avatar, name, and email",
                                    "Search functionality for posts by title with a clear button",
                                    "Sort posts by title",
                                    "Pagination is available"
                                ]
                            },
                            {
                                "titleL2": "About me page",
                                "infoL2": [
                                    "Some information about the author",
                                    "Option to download the CV"
                                ]
                            },
                            {
                                "titleL2": "User details page (navigated via avatar click on a post)",
                                "infoL2": [
                                    "A card showing brief user information corresponding to the post author",
                                    "A list of posts belonging only to this user",
                                    "A `Back` button that navigates back to the main page"
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Posts-web-app/1.jpg",
                    "/cv-frontend/images/projects/Posts-web-app/2.jpg",
                    "/cv-frontend/images/projects/Posts-web-app/3.jpg",
                    "/cv-frontend/images/projects/Posts-web-app/4.jpg"
                ]
            },
            {
                "name": "Posts-web-app (Vue)",
                "summary": "A web application for viewing and adding posts",
                "repo": "https://github.com/mspolermo/vue3-project",
                "ghPage": null,
                "important": false,
                "skills": [
                    {
                        "title": "Vue",
                        "value": [
                            "Vuex",
                            "Axios"
                        ]
                    },
                    "JavaScript"
                ],
                "description": [
                    {
                        "title": "About the project",
                        "info": "A simple application for viewing and adding posts built with Vue.js using Vuex and Vue Router. Data is fetched asynchronously from the JSONPlaceholder fake API."
                    },
                    {
                        "title": "Functionality",
                        "info": [
                            "The main page displays a list of posts.",
                            "Click the `Open` button to open a page with a post.",
                            "Click the `Create post` button to add a new post.",
                            "Click the `Delete` button to remove a post."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Posts-web-app/vue.png"
                ]
            },
            {
                "name": "Sultan-web-app",
                "summary": "Part of an online store (product catalog, product page, cart, admin page) with responsive design",
                "repo": "https://github.com/mspolermo/sultan-web-app",
                "ghPage": "https://mspolermo.github.io/sultan-web-app/",
                "important": false,
                "skills": [
                    "TypeScript",
                    {
                        "title": "React",
                        "value": [
                            "React-router",
                            "Jest",
                            "React testing library"
                        ]
                    },
                    "SCSS",
                    "Git"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "Developed using React, TypeScript, SCSS. Covered with tests using Jest and React Testing Library"
                    },
                    {
                        "title": "Project launch instructions",
                        "info": [
                            "Clone the repository to your PC",
                            "Switch to the master branch using the `git checkout master` command in the terminal at the project root",
                            "Run the project using the `npm start` command in the terminal at the project root"
                        ]
                    },
                    {
                        "title": "Functionality and portal appearance",
                        "info": [
                            {
                                "titleL2": "Website header",
                                "infoL2": [
                                    "Active cart"
                                ]
                            },
                            {
                                "titleL2": "Product catalog page",
                                "infoL2": [
                                    "Product sorting (4 options: by price and name, ascending and descending)",
                                    "Filters (by price, manufacturer, product type (Body care / Hand care / Foot care / Face care, etc.))",
                                    "Pagination buttons",
                                    "Navigate to the `Product card` page by clicking on a product (each product opens with its own URL)",
                                    "Add a product to the cart by clicking the `Add to cart` button"
                                ]
                            },
                            {
                                "titleL2": "Product card page",
                                "infoL2": [
                                    "Breadcrumbs (Home - Catalog - Product ID)",
                                    "Image and product information (data from JSON/Local Storage)",
                                    "Add a product to the cart by clicking the `Add to cart` button"
                                ]
                            },
                            {
                                "titleL2": "Cart",
                                "infoL2": [
                                    "The header block updates based on user actions",
                                    "Active buttons for increment/decrement and remove from cart",
                                    "When the `Place Order` button is clicked, a `Thank you for your order` modal is displayed, and the cart is cleared"
                                ]
                            },
                            {
                                "titleL2": "Admin page",
                                "infoL2": [
                                    "Edit, add, delete products and save them to localStorage",
                                    "If the list is empty (admin deleted all or at the start), it populates from a JSON file prepared in `/src/goods/goodsJSON.json`",
                                    "Manage product care types. When adding/editing, you can select the care type from a list"
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Sultan-web-app/1.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/2.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/3.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/4.jpg",
                    "/cv-frontend/images/projects/Sultan-web-app/5.jpg"
                ]
            },
            {
                "name": "Github-search-repositories",
                "summary": "Web application for searching GitHub repositories using the GitHub API",
                "repo": "https://github.com/mspolermo/Github-search-repositories",
                "ghPage": "https://mspolermo.github.io/Github-search-repositories",
                "important": false,
                "skills": [
                    "JavaScript",
                    "Rest_API",
                    "SCSS",
                    "WebPack",
                    "Git"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "Built with JavaScript, SCSS. The application is bundled using WebPack."
                    },
                    {
                        "title": "Project Launch Instructions",
                        "info": [
                            "Clone the repository to your PC",
                            "Switch to the master branch using the command `git checkout master` in the terminal at the project root",
                            "Run the project using the command `npm start` in the terminal at the project root"
                        ]
                    },
                    {
                        "title": "Functionality and Portal Appearance",
                        "info": [
                            "The form works by clicking the `Search` button or pressing the Enter key.",
                            "The results list shows only the first 10 repositories found.",
                            {
                                "titleL2": "Input field (for search substring):",
                                "infoL2": [
                                    "If there are not enough characters, an error message is displayed."
                                ]
                            },
                            "The search results display the repository name, programming language, visibility, description, avatar, username, and the repository owner's ID.",
                            {
                                "titleL2": "Repository names also serve as links to the corresponding GitHub repositories:",
                                "infoL2": [
                                    "Links open in a new browser tab."
                                ]
                            },
                            {
                                "titleL2": "Additional features:",
                                "infoL2": [
                                    "Initially, the list is empty.",
                                    "If no results are found, a message `Sorry, nothing found` is displayed instead of the list.",
                                    "In case of an API error, a message `ERROR - Something went wrong` is displayed instead of the list."
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Github-search-repositories/1.jpg",
                    "/cv-frontend/images/projects/Github-search-repositories/2.jpg",
                    "/cv-frontend/images/projects/Github-search-repositories/3.jpg"
                ]
            },
            {
                "name": "News-web",
                "summary": "Implementation of a news site page with a functional comment section",
                "repo": "https://github.com/mspolermo/News-web",
                "ghPage": "https://mspolermo.github.io/News-web/",
                "important": false,
                "skills": [
                    "JavaScript",
                    "SCSS",
                    "WebPack",
                    "Git"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "Built with JavaScript, SCSS. The application is bundled using WebPack."
                    },
                    {
                        "title": "Project Launch Instructions",
                        "info": [
                            "Clone the repository to your PC",
                            "Switch to the master branch using the command `git checkout master` in the terminal at the project root",
                            "Run the project using the command `npm start` in the terminal at the project root"
                        ]
                    },
                    {
                        "title": "Functionality",
                        "info": [
                            "A comment is created by clicking the `Submit` button or pressing the Enter key.",
                            {
                                "titleL2": "Validation: If the form is filled out incorrectly, an error message is displayed next to the field.",
                                "infoL2": [
                                    {
                                        "titleL3": "Commenter Name",
                                        "infoL3": [
                                            "Minimum length of 2 characters.",
                                            "Numbers and special characters are not allowed."
                                        ]
                                    },
                                    {
                                        "titleL3": "Comment Text",
                                        "infoL3": [
                                            "Minimum length of 1 character."
                                        ]
                                    },
                                    "The error disappears as you continue typing in the input field."
                                ]
                            },
                            "Comments can be deleted by clicking the delete button (trash can icon).",
                            "Comments can be liked or unliked.",
                            "When a new comment is added, the comment counters at the top of the page and in the comment block update automatically."
                        ]
                    },
                    {
                        "title": "Appearance",
                        "info": [
                            {
                                "titleL2": "Comment addition form:",
                                "infoL2": [
                                    "Commenter name.",
                                    "Comment text.",
                                    {
                                        "titleL3": "Option to specify a date or leave it empty:",
                                        "infoL3": [
                                            "If no date is provided, the current date is automatically set."
                                        ]
                                    },
                                    "Submit button."
                                ]
                            },
                            {
                                "titleL2": "Comment list:",
                                "infoL2": [
                                    "Commenter name.",
                                    "Comment text.",
                                    {
                                        "titleL3": "Date and time of submission:",
                                        "infoL3": [
                                            "If the current date: `Today, 16:23` (key term - today, time is auto-filled).",
                                            "If the previous day: `Yesterday, 18:39` (key term - yesterday, random time is generated and auto-filled).",
                                            "Other dates are displayed as `year-month-day`, with random times generated and auto-filled."
                                        ]
                                    },
                                    "Delete comment button (trash can icon).",
                                    "Like button (heart icon)."
                                ]
                            }
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/News-web/1.jpg",
                    "/cv-frontend/images/projects/News-web/2.jpg",
                    "/cv-frontend/images/projects/News-web/3.jpg",
                    "/cv-frontend/images/projects/News-web/4.jpg"
                ]
            },
            {
                "name": "Evklid-web",
                "summary": "Pixel-perfect layout of a page based on a design, featuring adaptive design, a slider, and an accordion",
                "repo": "https://github.com/mspolermo/Evklid-web",
                "ghPage": "https://mspolermo.github.io/Evklid-web/",
                "important": false,
                "skills": [
                    "JavaScript",
                    "SCSS",
                    "WebPack",
                    "Git",
                    "Swiper",
                    "jQuery"
                ],
                "description": [
                    {
                        "title": "Description",
                        "info": "Developed using SCSS, JavaScript, Swiper, and jQuery (Accordion). The project is bundled with WebPack."
                    },
                    {
                        "title": "Project Launch Instructions",
                        "info": [
                            "Clone the repository to your PC.",
                            "Switch to the master branch using the command `git checkout master` in the terminal at the project root.",
                            "Run the project using the command `npm start` in the terminal at the project root."
                        ]
                    },
                    {
                        "title": "Functionality and Appearance",
                        "info": [
                            "Animations and highlighting on hover/focus for buttons, forms, and links.",
                            "Implemented slider, accordion, and tabs.",
                            "In the tablet and mobile versions, the site menu opens via a burger-menu button."
                        ]
                    }
                ],
                "screenshots": [
                    "/cv-frontend/images/projects/Evklid-web/1.jpg",
                    "/cv-frontend/images/projects/Evklid-web/2.jpg",
                    "/cv-frontend/images/projects/Evklid-web/3.jpg",
                    "/cv-frontend/images/projects/Evklid-web/4.jpg",
                    "/cv-frontend/images/projects/Evklid-web/5.jpg"
                ]
            }            
        ]
    },
    "works" : {
        "ru": [
            {
                "title": "Frontend-разработчик (React)",
                "company": "SpectrumData",
                "companyEn": "SpectrumData",
                "start": "07.2024",
                "finish": "02.2025",
                "important" : true,
                "skills": [
                    "TypeScript",
                    "React",
                    "Next",
                    "Recoil",
                    "Vite",
                    "Material-UI",
                    "Sentry",
                    "Playwright",
                    "OpenAPI",
                    "Storybook",
                    "Docker",
                    "Kubernetes",
                    "EsLint",
                    "Prettier",
                    "Husky",
                    "YouTrack",
                    "Git",
                    "Team work",
                    "Problem-solving"
                ],
                "descriptionShort": [
                    "С нуля и до релиза разрабатывал высоконагруженный продукт для крупных клиентов компании (РЕСО, Ренессанс, Т-банк и пр.).",
                    "Реализовал интерактивный canvas редактор повреждений (референс - визуальная часть draw.io)",
                    "Разработал функционал для работы с формами: создание и редактирование страховых дел.",
                    "Создал админ-панель для управления клиентами, квотами, биллингами и другими сущностями (добавление, просмотр, редактирование).",
                    "Реализовал обширный функционал для работы со списком страховых дел: отчеты, перенаправление, отклонение, возвраты, отладочные функции, сортировки и прочее.",
                    "Значительно расширил и оптимизировал UI-kit компании, внедрив новые компоненты и улучшив существующие.",
                    "Развивал тестирование приложений (скриншотные и e2e тесты на Playwright), что снизило количество ошибок на этапе разработки.",
                    "Участвовал в проектировании и внедрении новой архитектуры проектов."
                ],
                "descriptionFull": [
                    "С нуля и до релиза разрабатывал высоконагруженный продукт для крупных клиентов компании (РЕСО, Ренессанс, Т-банк и пр.).",
                    "Реализовал интерактивный редактор повреждений (референс - визуальная часть draw.io): по клику на автозапчасти в GIF-канвасе и SVG-изображениях пользователи могут добавлять повреждения, которые автоматически отмечаются цветами на изображениях. С нуля собрал формы редактора и отображения уже добавленных повреждений. Добавил табличное представление всех деталей и их поиск. Внедрил сохранение всего текущего состояния взаимодействия в query-параметрах, что решило задачу при шаринге ссылки открывать редактор с выбранными частями изображения и активностью редактора другого пользователя.",
                    "Разработал функционал для работы с формами: создание и редактирование страховых дел.",
                    "Создал админ-панель для управления клиентами, квотами, биллингами и другими сущностями (добавление, просмотр, редактирование).",
                    "Реализовал обширный функционал для работы со списком страховых дел: отчеты, перенаправление, отклонение, возвраты, отладочные функции, сортировки и прочее.",
                    "Разделял большие монолитные компоненты на самостоятельные модули, улучшив читаемость, тестируемость и повторное использование кода.",
                    "Значительно расширил и оптимизировал UI-kit компании, внедрив новые компоненты и улучшив существующие.",
                    "Развивал тестирование приложений (скриншотные и e2e тесты на Playwright), что снизило количество ошибок на этапе разработки.",
                    "Участвовал в проектировании и внедрении новой архитектуры проектов."
                ]
            },
            {
                "title": "Инженер-программист",
                "company": "ОКБ Новатор",
                "companyEn": "OKB Novator",
                "start": "11.2022",
                "finish": "7.2024",
                "important" : true,
                "skills": [
                    "TypeScript",
                    "JavaScript",
                    "C#",
                    "React",
                    "Redux",
                    "MobX",
                    "Webpack",
                    "Vite",
                    "Yarn WorkSpaces",
                    "Storybook",
                    "CSS",
                    "EsLint",
                    "Prettier",
                    "Cshtml",
                    ".NET",
                    "YouTrack",
                    "Git",
                    "Team work",
                    "Problem-solving"
                ],
                "descriptionShort": [
                    "Поддерживал и развивал Frontend-часть внутреннего документооборота военного завода (критическая инфраструктура оборонного предприятия, 5000+ пользователей). Разрабатывал формы, шаблоны и различные компоненты с референсальным визуалом общей дизайн-системы (без привлечения дизайнера).",
                    "Занимался глобальным переводом текущего Legacy-кода (JS, классовый React) на современный стэк (TypeScript, React Hooks). Покрыл код документацией.",
                    "Развивал клиентский функционал по работе со служебными записками и приказами: создание, одобрение, подтверждение, просмотр истории и пр.",
                    "Разработал и внедрил монорепозиторий с кастомными UI-компонентами, хуками и хелперами. Настроил EsLint, Prettier, Storybook и переиспользуемый сборщик.",
                    "Писал служебные скрипты и плагины для браузера на ванильном JavaScript."
                ],
                "descriptionFull": [
                    "Поддерживал и развивал Frontend-часть внутреннего документооборота военного завода (критическая инфраструктура оборонного предприятия, 5000+ пользователей). Разрабатывал формы, шаблоны и различные компоненты с референсальным визуалом общей дизайн-системы (без привлечения дизайнера).",
                    "Занимался глобальным переводом текущего Legacy-кода (JS, классовый React) на современный стэк (TypeScript, React Hooks), чтобы улучшить читаемость и понизить порог входа на проект. Самостоятельно разобрался и покрыл код документацией.",
                    "Развивал клиентский функционал по работе со служебными записками и приказами: создание, одобрение, подтверждение, просмотр истории и пр.",
                    "Перенастроил webpack конфигурацию, что значительно ускорило сборку проекта, а также сократило время релиза.",
                    "Верстал шаблоны и черновики документов на cshtml. Брал на себя часть разработки бизнес-логики на бэкенде (C#).",
                    "Разработал и внедрил монорепозиторий с кастомными UI-компонентами, хуками и хелперами. Настроил EsLint, Prettier, Storybook и переиспользуемый сборщик.",
                    "Писал служебные скрипты и плагины для браузера на ванильном JavaScript."
                ]
            },
            {
                "title": "Web-разработчик (TypeScript, React)",
                "company": "Hotels.ru",
                "companyEn": "Hotels.ru",
                "start": "07.2021",
                "finish": "10.2022",
                "important" : true,
                "skills": [
                    "TypeScript",
                    "React",
                    "Redux",
                    "Axios",
                    "React-router",
                    "I18n",
                    "Jest",
                    "React testing library",
                    "Rest_API",
                    "SCSS",
                    "Git",
                    "Team work",
                    "Problem-solving"
                ],
                "descriptionShort": [
                    "Создал и внедрил новые карточки номеров для отелей в разных странах, учитывая культурные и региональные особенности, что значительно улучшило пользовательский опыт и восприятие бренда.",
                    "Внедрил интернационализацию в проект (i18n, английский язык), что позволило привлечь англоговорящих пользователей.",
                    "Реализовал ряд оптимизаций, направленных на ускорение загрузки и работы приложения (код-сплиттинг, lazy loading, кэширование и сжатие изображений).",
                    "Создавал/обновлял стори-кейсы и внутренний UI-kit компании. Верстал по макетам Figma. Писал и поддерживал unit/e2e/скриншотные тесты на RTL, Jest, Cypress и Loki."
                ],
                "descriptionFull": [
                    "Реализовал обновление данных в реальном времени, обеспечив пользователям доступ к актуальной информации о номерах и услугах.",
                    "Создал и внедрил новые карточки номеров для отелей в разных странах, учитывая культурные и региональные особенности, что значительно улучшило пользовательский опыт и восприятие бренда.",
                    "Внедрил интернационализацию в проект (i18n, английский язык), что позволило привлечь англоговорящих пользователей.",
                    "Реализовал ряд оптимизаций, направленных на ускорение загрузки и работы приложения (код-сплиттинг, lazy loading, кэширование и сжатие изображений).",
                    "Создавал/обновлял стори-кейсы и внутренний UI-kit компании. Верстал по макетам Figma.",
                    "Писал и поддерживал unit/e2e/скриншотные тесты на RTL, Jest, Cypress и Loki.",
                    "Участие в разработке и поддержке веб-приложений с использованием современных технологий, включая TypeScript, React, Redux, HTML, CSS и другие.",
                    "Активное участие во всех этапах разработки проектов: анализ требований, проектирование интерфейсов, написание и отладка кода, тестирование и развертывание приложений.",
                    "Оптимизация пользовательского интерфейса для обеспечения отзывчивости приложений.",
                    "Разработка адаптивного и кросс-браузерного интерфейса с использованием современных методов верстки и CSS-процессоров.",
                    "Взаимодействие с API и интеграция сторонних сервисов для получения и обработки данных.",
                    "Оптимизация и улучшение существующего кода, исправление ошибок и устранение проблем для повышения качества и производительности приложений.",
                    "Обмен опытом и использование лучших практик разработки для повышения качества кода и эффективности работы.",
                    "Исследование новых технологий, фреймворков и инструментов разработки для постоянного совершенствования навыков."
                ]
            },
            {
                "title": "Системный инженер",
                "company": "SAP",
                "companyEn": "SAP",
                "start": "04.2018",
                "finish": "02.2023",
                "important" : false,
                "skills": [
                    "Team work",
                    "Time management",
                    "Problem-solving",
                    "Emotional control",
                    "Customer orientation"
                ],
                "descriptionShort": [
                    "Выполнял задачи 2-й линии внутренней технической поддержки в системе ServiceNow (аналог Jira). Разрабатывал рекомендации по устранению проблем и багов, анализировал логи и проводил траблшутинг.",
                    "Работал в распределенной команде, участвовал в регулярных встречах в Teams, общался на английском языке, тестировал оборудование и программное обеспечение.",
                    "Повышал квалификацию с помощью внутренней литературы и сертификаций на английском языке.",
                    "Осуществлял стандартные обязанности системного администратора, включая работу с SAP ERP, MS Azure AD, Jamf Pro и B2B Мегафон."
                ],
                "descriptionFull": [
                    "Техническая поддержка пользователей, диагностика неисправностей и настройка оборудования (Windows 10/11, MacOS, Android, iOS).", 
                    "Техническое обслуживание и регулярное обновление информационных систем (MS365, McAfee).",
                    "Организация ремонта неисправного оборудования.", 
                    "Приобретение, подготовка, выдача и замена оборудования. Учёт IT-оборудования в SAP ERP (ISP). Контроль за складом.",
                    "Второй уровень технической поддержки SAP IT (работа в тикет системах ServiceNow/IT-Direct, B2B портал Мегафон, MDSL). Подготовка отчетности, связанной с технической поддержкой пользователей и выполнение поставленных задач по заявкам на английском языке.",
                    "Администрирование MS Azure AD, JamfPro.",
                    "VPN: F5 BIG IP Edge Client, Global Protect, Cisco AnyConnect.",
                    "Решение проблем с авторизацией - SSO/MFA.",
                    "Регулярная проверка работоспособности и обслуживание VideoConference & Metting Rooms (проектора, телевизоры, Cisco , Polycom CX3000/CX5500, MTR (Lenovo ThinkSmart / Logitech Rally, системы букирования Evoko Liso, коммутация).",
                    "Maintenance серверной, с участием англоговорящей техподдержки (монтаж/демонтаж серверного оборудования, cabling).",
                    "Onboarding новых сотрудников в области IT, обучение персонала.",
                    "Парк техники: более 100 ноутбуков/Iphones, мультимедийное оборудование, сетевые secure-МФУ, Zebra, серверная.",
                    "Подготовка электронных пропусков (ParsecNET), мониторинг работоспособности видеонаблюдения (Milestone Xprotect Smart Client)."
                ]
            },
            {
                "title": "Программист",
                "company": "ЦСПСиД",
                "companyEn": "CSPSiD",
                "start": "06.2014",
                "finish": "08.2019",
                "important" : false,
                "skills": [
                    "Problem-solving",
                    "Time management",
                    "Emotional control",
                    "Customer orientation"
                ],
                "descriptionShort": [
                    "Развивал и поддерживал сайт компании - HTML, CSS, JavaScript",
                    "Администрировал Windows Server 2008 (AD, FTP, Backup), VipNet, SecretNet, ИССОН.",
                    "Обслуживал и организовывал рабочие места сотрудников компании.",
                    "Осуществлял поддержку и обучение пользователей."
                    
                ],
                "descriptionFull": [
                    "Обслуживание и организация новых рабочих мест сотрудников компании.",
                    "Поддержка и обучение пользователей.",
                    "Устранение неисправностей (аппаратных и программных), возникающих при использовании ПК. Диагностика и их решение.",
                    "Развитие сети (выполнение коммутационных работ).",
                    "Контроль текущего состояния антивирусной защиты.",
                    "Контроль своевременной установки всех необходимых обновлений для программного обеспечения.",
                    "Мелкий ремонт копировально-множительной техники (устранение замятий бумаги, замена батарей ИБП и т.п.).",
                    "Windows Server 2008 (AD, FTP, Backup), VipNet, SecretNet, ИССОН"
                ]
            },
            {
                "title": "Сервисный инженер",
                "company": "Северный мост",
                "companyEn": "North bridge",
                "start": "01.2016",
                "finish": "10.2017",
                "important" : false,
                "skills": [
                    "Problem-solving",
                    "Time management",
                    "Customer orientation",
                    "Emotional control"
                ],
                "descriptionShort": [
                    "IT-Аутсорсинг фирм: 16 компаний под постянным личным контролем.",
                    "Сервисная работа: диагностика и ремонт ПК.",
                    "Монтажные работы: ЛВС, телефония, аналоговое видеонаблюдение."
                ],
                "descriptionFull": [
                    "IT-Аутсорсинг фирм(16 компаний под постоянным личным контролем - клининговая компания, столовые УГМК, туристическое агенство, ТСЖ, комбинаты школьного питания и т.д.): настройка и обновление ПО, антивирусная защита, своевременный ремонт и замена сопровождаемого оборудования, внедрение и перестановка рабочих мест, консультирование, обучение и поддержка пользователей, решение проблем удаленно и на месте. Обслуживание ПК, серверов, оргтехники и периферии. Замена нерабочих фискальников,сканеров штрихкода, банковских терминалов.",
                    "Сервисная работа: диагностика неисправностей ПК и ноутбуков, умение пользоваться диагностическими программами (Виктория, MHDD, Mem test и т.д.). Решение проблем программного плана, чистка от пыли, модульный и корпусной ремонт. Сборка, разборка сотен ноутбуков, нетбуков, мониторов, моноблоков и ПК. Инженерный ремонт из подручных средств. Пайка - разъемы питания, USB, спайка порванных шлейфов и кабелей, замена вздутых конденсаторов на рабочие, небольшой опыт замены видеочипов, южных и северных мостов на паяльной станции. Переустановка и настройка ОС семейства Windows, linux, mac.",
                    "Монтажные работы: ЛВС, телефония, аналоговое видеонаблюдение. Обнаружение неиспользуемой коммутации в ЛВС, протянутой сторонними лицами. Настройка маршрутизаторов и точек доступа.",
                    "1С - работа с техподдержкой по вопросам лицензий; установка и подключение готовых БД; обновление платформы и конфигурации.",
                    "Настройка доступа к госуслугам и госзакупкам. Получение и установка ЭЦП. Настройка онлайн-банков. Установка и настройка почтовых клиентов."
                ]
            }        
        ],
        "en" : [
            {
                "title": "Frontend Developer (React)",
                "company": "SpectrumData",
                "companyEn": "SpectrumData",
                "start": "07.2024",
                "finish": "02.2025",
                "important": true,
                "skills": [
                    "TypeScript",
                    "React",
                    "Next",
                    "Recoil",
                    "Vite",
                    "Material-UI",
                    "Sentry",
                    "Playwright",
                    "OpenAPI",
                    "Storybook",
                    "Docker",
                    "Kubernetes",
                    "EsLint",
                    "Prettier",
                    "Husky",
                    "YouTrack",
                    "Git",
                    "Team work",
                    "Problem-solving"
                ],
                "descriptionShort": [
                    "Developed a high-load product from scratch to release for the company's major clients (RESO, Renaissance, T-Bank, etc.).",
                    "Implemented an interactive damage canvas editor (reference: the visual part of draw.io).",
                    "Developed functionality for working with forms: creating and editing insurance cases.",
                    "Created an admin panel to manage clients, quotas, billings, and other entities (add, view, edit).",
                    "Implemented extensive functionality for working with insurance case lists: reports, redirects, rejections, returns, debugging features, sorting, and more.",
                    "Significantly expanded and optimized the company's UI-kit by introducing new components and improving existing ones.",
                    "Enhanced application testing (screenshot and e2e tests with Playwright), reducing the number of development-stage bugs.",
                    "Participated in designing and implementing a new project architecture."
                ],
                "descriptionFull": [
                    "Developed a high-load product from scratch to release for the company's major clients (RESO, Renaissance, T-Bank, etc.).",
                    "Implemented an interactive damage editor (reference: the visual part of draw.io). Users could click on car parts in GIF canvases and SVG images to add damage, which was automatically marked with colors on the images. Built editor forms and displayed added damage from scratch. Added a tabular view of all parts with search functionality. Enabled saving the entire interaction state in query parameters, solving the issue of opening the editor with selected parts and user activity when sharing links.",
                    "Developed functionality for working with forms: creating and editing insurance cases.",
                    "Created an admin panel to manage clients, quotas, billings, and other entities (add, view, edit).",
                    "Implemented extensive functionality for working with insurance case lists: reports, redirects, rejections, returns, debugging features, sorting, and more.",
                    "Refactored large monolithic components into independent modules, improving code readability, testability, and reusability.",
                    "Significantly expanded and optimized the company's UI-kit by introducing new components and improving existing ones.",
                    "Enhanced application testing (screenshot and e2e tests with Playwright), reducing the number of development-stage bugs.",
                    "Participated in designing and implementing a new project architecture."
                ]
            },
            {
                "title": "Software Engineer",
                "company": "OKB Novator",
                "companyEn": "OKB Novator",
                "start": "11.2022",
                "finish": "07.2024",
                "important": true,
                "skills": [
                    "TypeScript",
                    "JavaScript",
                    "C#",
                    "React",
                    "Redux",
                    "MobX",
                    "Webpack",
                    "Vite",
                    "Yarn WorkSpaces",
                    "Storybook",
                    "CSS",
                    "EsLint",
                    "Prettier",
                    "Cshtml",
                    ".NET",
                    "YouTrack",
                    "Git",
                    "Team work",
                    "Problem-solving"
                ],
                "descriptionShort": [
                    "Maintained and developed the frontend part of the internal document management system of a military plant (critical defense infrastructure with 5000+ users). Developed forms, templates, and various components referencing the design system without involving a designer.",
                    "Globally migrated legacy code (JS, class-based React) to a modern stack (TypeScript, React Hooks). Documented the code.",
                    "Enhanced client functionality for working with service notes and orders: creation, approval, confirmation, viewing history, etc.",
                    "Developed and implemented a monorepo with custom UI components, hooks, and helpers. Configured EsLint, Prettier, Storybook, and a reusable bundler.",
                    "Wrote utility scripts and browser plugins using vanilla JavaScript."
                ],
                "descriptionFull": [
                    "Maintained and developed the frontend part of the internal document management system of a military plant (critical defense infrastructure with 5000+ users). Developed forms, templates, and various components referencing the design system without involving a designer.",
                    "Globally migrated legacy code (JS, class-based React) to a modern stack (TypeScript, React Hooks) to improve readability and lower the project entry barrier. Independently documented the code.",
                    "Enhanced client functionality for working with service notes and orders: creation, approval, confirmation, viewing history, etc.",
                    "Reconfigured the Webpack setup, significantly speeding up the project's build process and reducing release times.",
                    "Created templates and draft documents using Cshtml. Took part in developing backend business logic (C#).",
                    "Developed and implemented a monorepo with custom UI components, hooks, and helpers. Configured EsLint, Prettier, Storybook, and a reusable bundler.",
                    "Wrote utility scripts and browser plugins using vanilla JavaScript."
                ]
            },
            {
                "title": "Web Developer (TypeScript, React)",
                "company": "Hotels.ru",
                "companyEn": "Hotels.ru",
                "start": "07.2021",
                "finish": "10.2022",
                "important": true,
                "skills": [
                    "TypeScript",
                    "React",
                    "Redux",
                    "Axios",
                    "React-router",
                    "I18n",
                    "Jest",
                    "React testing library",
                    "Rest_API",
                    "SCSS",
                    "Git",
                    "Team work",
                    "Problem-solving"
                ],
                "descriptionShort": [
                    "Designed and implemented new room cards for hotels in different countries, considering cultural and regional specifics, significantly improving user experience and brand perception.",
                    "Implemented project internationalization (i18n, English language), attracting English-speaking users.",
                    "Introduced several optimizations to accelerate app loading and performance (code-splitting, lazy loading, caching, and image compression).",
                    "Created/updated story cases and the company's internal UI-kit. Developed layouts based on Figma designs. Wrote and maintained unit/e2e/screenshot tests using RTL, Jest, Cypress, and Loki."
                ],
                "descriptionFull": [
                    "Implemented real-time data updates, providing users with up-to-date information about rooms and services.",
                    "Designed and implemented new room cards for hotels in different countries, considering cultural and regional specifics, significantly improving user experience and brand perception.",
                    "Implemented project internationalization (i18n, English language), attracting English-speaking users.",
                    "Introduced several optimizations to accelerate app loading and performance (code-splitting, lazy loading, caching, and image compression).",
                    "Created/updated story cases and the company's internal UI-kit. Developed layouts based on Figma designs.",
                    "Wrote and maintained unit/e2e/screenshot tests using RTL, Jest, Cypress, and Loki.",
                    "Participated in the development and maintenance of web applications using modern technologies, including TypeScript, React, Redux, HTML, CSS, and others.",
                    "Actively engaged in all stages of project development: requirements analysis, interface design, coding and debugging, testing, and application deployment.",
                    "Optimized user interfaces to ensure responsive applications.",
                    "Developed adaptive and cross-browser interfaces using modern layout methods and CSS preprocessors.",
                    "Interacted with APIs and integrated third-party services to retrieve and process data.",
                    "Optimized and improved existing code, fixed bugs, and resolved issues to enhance application quality and performance.",
                    "Shared knowledge and applied best practices to improve code quality and work efficiency.",
                    "Researched new technologies, frameworks, and development tools to continuously improve skills."
                ]
            },
            {
                "title": "System engineer",
                "company": "SAP",
                "companyEn": "SAP",
                "start": "04.2018",
                "finish": "02.2023",
                "important" : false,
                "skills": [
                    "Team work",
                    "Time management",
                    "Problem-solving",
                    "Emotional control",
                    "Customer orientation"
                ],
                "descriptionShort": [
                    "Performed tasks of the 2nd line of internal technical support in the ServiceNow system (similar to Jira). Developed recommendations for fixing problems and bugs, analyzed logs and conducted troubleshooting.",
                    "Worked in a distributed team, participated in regular meetings in Teams, communicated in English, tested hardware and software.",
                    "Improved my skills with the help of internal literature and certifications in English.",
                    "Carried out standard duties of a system administrator, including work with SAP ERP, MS Azure AD, Jamf Pro and B2B Megafon."
                ],
                "descriptionFull": [
                    "Technical support for users, troubleshooting, and configuration of equipment (Windows 10/11, MacOS, Android, iOS).",
                    "Maintenance and regular updates of information systems (MS365, McAfee).",
                    "Organizing repairs for malfunctioning equipment.",
                    "Acquisition, preparation, issuance, and replacement of equipment. IT equipment inventory management in SAP ERP (ISP). Inventory control.",
                    "Second-level technical support for SAP IT (working with ticket systems ServiceNow/IT-Direct, B2B portal MegaFon, MDSL). Preparation of reports related to technical user support and handling tasks from requests in English.",
                    "Administration of MS Azure AD, JamfPro.",
                    "VPN: F5 BIG IP Edge Client, Global Protect, Cisco AnyConnect.",
                    "Resolving authorization issues - SSO/MFA.",
                    "Regular checking and maintenance of VideoConference & Meeting Rooms (projectors, televisions, Cisco, Polycom CX3000/CX5500, MTR (Lenovo ThinkSmart / Logitech Rally, Evoko Liso booking systems, switching).",
                    "Server maintenance, with involvement of English-speaking technical support (installation/uninstallation of server equipment, cabling).",
                    "Onboarding new employees in the IT field, staff training.",
                    "Equipment inventory: over 100 laptops/iPhones, multimedia equipment, secure networked MFPs, Zebra, servers.",
                    "Preparation of electronic passes (ParsecNET), monitoring the functionality of video surveillance (Milestone Xprotect Smart Client)."
                ]
            },
            {
                "title": "Developer",
                "company": "CSPSiD",
                "companyEn": "CSPSiD",
                "start": "06.2014",
                "finish": "08.2019",
                "important" : false,
                "skills": [
                    "Problem-solving",
                    "Time management",
                    "Customer orientation",
                    "Emotional control"
                ],
                "descriptionShort": [
                    "Developed company's website - HTML, CSS, JavaScript",
                    "Administered Windows Server 2008 (AD, FTP, Backup), VipNet, SecretNet, ISSON.",
                    "Maintained and organized workstations for company employees.",
                    "Provided user support and training."
                ],
                "descriptionFull": [
                    "Servicing and organizing new workstations for company employees.",
                    "Providing user support and training.",
                    "Troubleshooting and resolving hardware and software issues related to PC usage.",
                    "Network development and performing switch-related tasks.",
                    "Monitoring the current state of antivirus protection.",
                    "Ensuring timely installation of all necessary software updates.",
                    "Minor repairs of copiers and multipliers (paper jams, replacement of UPS batteries, etc.).",
                    "Windows Server 2008 administration (AD, FTP, Backup), VipNet, SecretNet, ISSON."
                ]
            },
            {
                "title": "Service Engineer",
                "company": "North bridge",
                "companyEn": "North bridge",
                "start": "01.2016",
                "finish": "10.2017",
                "important" : false,
                "skills": [
                    "Problem-solving",
                    "Time management",
                    "Customer orientation",
                    "Emotional control"
                ],
                "descriptionShort": [
                    "IT Outsourcing companies: 16 companies under constant personal supervision.",
                    "Service work: Diagnostics and repair of personal computers.",
                    "Installation work: LANs, telephony, analog video surveillance."
                ],
                "descriptionFull": [
                    "IT Outsourcing companies (16 companies under constant personal supervision - cleaning company, canteens of UMMC, travel agency, housing cooperative, school meal factories, etc.): software configuration and updates, antivirus protection, timely repair and replacement of supported equipment, workstation deployment and rearrangement, user consulting, training, and support, remote and on-site problem-solving. Maintenance of PCs, servers, office equipment, and peripherals. Replacement of malfunctioning fiscal devices, barcode scanners, and bank terminals.",
                    "Service work: Diagnostics of PC and laptops malfunctions, ability to use diagnostic programs (Victoria, MHDD, Mem test, etc.). Software problem-solving, dust cleaning, modular and chassis repair. Assembly and disassembly of hundreds of laptops, netbooks, monitors, all-in-one PCs. Engineering repairs using improvised means. Soldering - power connectors, USB, splicing broken flex cables, replacement of swollen capacitors with functional ones, limited experience in video chip, south and north bridge replacement using a soldering station. Reinstallation and configuration of Windows, Linux, and macOS operating systems.",
                    "Installation work: LANs, telephony, analog video surveillance. Detection of unused switching in LANs installed by third parties. Configuration of routers and access points.",
                    "1C - working with technical support on licensing issues; installation and connection of ready-made databases; platform and configuration updates.",
                    "Setting up access to government services and procurement. Obtaining and installing digital signatures. Configuration of online banking. Installation and configuration of mail clients."
                    ]
            }        
        ]
    },
    "education" : {
        "ru": [
            {
                "title": "Alibra School",
                "info": "Курсы английского языка",
                "year": "2020",
                "rank": "English - B2",
                "important": false 
            },
            {
                "title": "Alibra School",
                "info": "Курсы английского языка",
                "year": "2019",
                "rank": "English - B1",
                "important": false  
            },
            {
                "title": "УрФУ, Екатеринбург",
                "info": "Уральский федеральный университет имени первого Президента России Б.Н. Ельцина, Институт радиоэлектроники и информационных технологий, Кафедра радиоэлектронных и телекоммуникационных систем.",
                "year": "2017",
                "rank": "Магистратура (неоконченное)",
                "important": true  
            },
            {
                "title": "РГППУ, Екатеринбург",
                "info": "Российский государственный профессионально-педагогический университет, Кафедра информационных систем и технологий, Информатика и вычислительная техника",
                "year": "2015",
                "rank": "Специалитет",
                "important": true 
            }
        ],
        "en" : [
            {
                "title": "Alibra School",
                "info": "English lessons",
                "year": "2020",
                "rank": "English - B2",
                "important": false 
            },
            {
                "title": "Alibra School",
                "info": "English lessons",
                "year": "2019",
                "rank": "English - B1",
                "important": false  
            },
            {
                "title": "URFU, Yekaterinburg",
                "info": "Ural Federal University named after the first President of Russia B.N. Yeltsin, Institute of Radio Electronics and Information Technologies, Department of Radio Electronic and Telecommunication Systems.",
                "year": "2017",
                "rank": "Magister (incomplete)",
                "important": true  
            },
            {
                "title": "RSVPU, Yekaterinburg",
                "info": "Russian State Vocational Pedagogical University, Department of Information Systems and Technologies, Informatics and Computer Engineering.",
                "year": "2015",
                "rank": "Specialist",
                "important": true 
            }
        ]
    },
    "about" : {
        "ru": [
            "Английский язык Upper-intermediate (B2), EF SET Quick Check - 75.",
            "Знание SQL на базовом уровне.",
            "Знание базовой теории тестирования.",
            {
                "title" : "Изученные материалы по теории тестирования:",
                "value": [
                    "«Tестирование dot com» Роман Савин;",
                    "«Тестирование программного обеспечения. Базовый курс» Святослав Куликов;",
                    "«Тестирование программного обеспечения. Фундаментальные концепции менеджмента бизнес-приложений» Сэм Канер, Джек Фолк, Енг Кек Нгуен;",
                    "Курс Артема Русова (YouTube);",
                    "Курс «Тестирование ПО» от «Контур» (Ulearn.me)." 
                ]
            },
            "Большой опыт работы системным администратором. Умение быстро развернуть и настроить необходимое ПО (macOS/linux/windows).",
            {
                "title" : "Мои хобби и увлечения:",
                "value": [
                    "Звукозапись и саунд-дизайн;",
                    "Новые технологии;",
                    "Консольный гейминг;",
                    "Домашние животные;",
                    "Путешествия." 
                ]
            },

            "Имеется автомобиль и права категории B."
        ],
        "en" : [
            "English level - Upper-intermediate (B2), EF SET Quick Check - 75.",
            "Basic knowledge of SQL.",
            "Knowledge of testing theory.",
            {
                "title" : "Studied materials on the theory of testing:",
                "value": [
                    "«Testing dot com» Roman Savin;",
                    "«Software Testing. Basic course» Svyatoslav Kulikov;",
                    "«Software testing. Fundamental concepts of business application management» Sam Kaner, Jack Falk, Yeng Kek Nguyen;",
                    "Artem Rusov's course (YouTube);",
                    "Course «Software Testing» («Kontur» Ulearn.me)." 
                ]
            },
            "Extensive experience as a system administrator. Ability to quickly deploy and configure the necessary software (macOS/linux/windows).",
            {
                "title" : "My hobbies and passions:",
                "value": [
                    "Sound recording and sound design;",
                    "New technologies;",
                    "Console gaming;",
                    "Pets;",
                    "Trips." 
                ]
            },

            "I have a car and a B-license."
        ]
    }
}
